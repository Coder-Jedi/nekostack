import { notFound } from 'next/navigation'
import { getRequestConfig } from 'next-intl/server'

// Can be imported from a shared config
export const locales = ['en', 'es', 'fr', 'de', 'ja', 'zh'] as const
export type Locale = (typeof locales)[number]

export const defaultLocale: Locale = 'en'

export const localeNames: Record<Locale, string> = {
  en: 'English',
  es: 'EspaÃ±ol',
  fr: 'FranÃ§ais', 
  de: 'Deutsch',
  ja: 'æ—¥æœ¬èªž',
  zh: 'ä¸­æ–‡'
}

export const localeFlags: Record<Locale, string> = {
  en: 'ðŸ‡ºðŸ‡¸',
  es: 'ðŸ‡ªðŸ‡¸',
  fr: 'ðŸ‡«ðŸ‡·',
  de: 'ðŸ‡©ðŸ‡ª',
  ja: 'ðŸ‡¯ðŸ‡µ',
  zh: 'ðŸ‡¨ðŸ‡³'
}

// @ts-expect-error - next-intl type compatibility issue
export default getRequestConfig(async ({ locale }: any) => {
  // Validate that the incoming `locale` parameter is valid
  if (!locales.includes(locale as Locale)) {
    notFound()
  }

  return {
    messages: (await import(`./messages/${locale}.json`)).default
  }
})
